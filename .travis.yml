sudo: required
env:
  global:
  - GOOGLE_APPLICATION_CREDENTIALS="${PWD}/semi-weaviate-infra.json"
  - PROJECT_ID="semi-186012"
  - ZONE="europe-west1-b"
  - TF_VERSION="0.11.0"
  - TF_VAR_gke_project="semi-186012"
  - TF_VAR_cluster_name="weaviate-${TRAVIS_BUILD_ID}-${TRAVIS_BUILD_NUMBER}"
cache:
  directories:
    - "$HOME/google-cloud-sdk/"
before_install:
- openssl aes-256-cbc -K $encrypted_92b93fb23917_key -iv $encrypted_92b93fb23917_iv -in semi-186012-d811e69bf044.json.enc -out semi-weaviate-infra.json -d

# Install kubectl manually because we need v1.12
- sudo apt-get update && sudo apt-get install -y apt-transport-https
- curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
- echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
- sudo apt-get update
- sudo apt-get install -y kubectl

# Install GCloud SDK
- gcloud version || true
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
# Add gcloud to $PATH
- source /home/travis/google-cloud-sdk/path.bash.inc
- gcloud version

# - gcloud components update kubectl --quiet
- gcloud auth activate-service-account --key-file "${GOOGLE_APPLICATION_CREDENTIALS}"
- gcloud config set project $PROJECT_ID
- gcloud config set compute/zone $ZONE

# Install Terraform
- curl -sLo /tmp/terraform.zip "https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
- unzip /tmp/terraform.zip -d /tmp
- mv /tmp/terraform ~/bin/
- export PATH="~/bin:$PATH"

# Install Helm
- curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
- chmod 700 get_helm.sh
- sudo ./get_helm.sh

install: true
script:
# Fail on error
- set -e
# Create GKE cluster
- terraform init ./terraform
- terraform plan ./terraform
- terraform apply -auto-approve ./terraform
# Prepare Cluster
- gcloud container clusters get-credentials ${TF_VAR_cluster_name}
- kubectl version
- ./helm_setup.sh
# Deploy Weaviate
- helm package ./helm/weaviate
- helm install --name weaviate ./weaviate-0.0.1.tgz
- sleep 30
# Etcd cluster needs to be created after initial install
- helm upgrade weaviate --set etcdCluster.create=true ./weaviate-0.0.1.tgz
 # Using sleep for now, once we have proper health checks on weaviate we can remove this
- sleep 500
# Ensure Weaviate is deployed and running
# This command can timeout - should not fail the build for this
- set +e
- kubectl rollout status deployment/weaviate
- set -e
# Run test scripts
- kubectl create -f verification/job.yaml
# Wait for verification job to start
- travis_wait 20 kubectl wait --for=condition=complete job/verification --timeout=20m
# Grap output of scripts
- kubectl logs $(kubectl get pods -lapp=verification -o jsonpath='{.items[0].metadata.name}')
after_script:
- terraform destroy -force ./terraform

